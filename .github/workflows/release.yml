name: Publish Docker image

on:
  push:
    branches: [master]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  cross-compile:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - name: Cache Go
        id: go-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
          key: go-cache-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
      - name: Install promu
        run: make promu
        shell: bash
      - name: Build
        run: ~/go/bin/promu -c .promu.yml crossbuild -v -p linux/amd64 -p linux/arm64 -p darwin/amd64 -p darwin/arm64
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: .build/*
          include-hidden-files: true


  push_to_registries:
    name: Push Docker image
    runs-on: ubuntu-latest
    needs: [cross-compile]

    permissions:
      attestations: write
      packages: write
      contents: read
      id-token: write

    if: (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download Binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: .build/
          include-hidden-files: true

      - run: chmod +x .build/**/*

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64,darwin/arm64,darwin/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
